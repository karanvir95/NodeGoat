name: KICS Scan for NodeGoat

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # Optional, allows manual triggering

jobs:
  kics_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up KICS CLI
        run: |
          # Install KICS CLI by downloading the correct tar.gz file
          curl -sSL https://github.com/Checkmarx/kics/releases/download/v1.8.0/kics-linux-amd64-v1.8.0.tar.gz | tar -xz -C /usr/local/bin
          kics --version  # Verify installation

      - name: Create output directory
        run: mkdir -p $GITHUB_WORKSPACE/kics_results  # Ensure output directory exists

      - name: Run KICS Scan with JSON output
        run: |
          # Run KICS scan with JSON output
          ./kics scan -p $GITHUB_WORKSPACE -o $GITHUB_WORKSPACE/kics_results --output-format json --output-name kics-result.json

      - name: List files in output directory
        run: ls -al $GITHUB_WORKSPACE/kics_results  # Verify that the scan output files exist

      - name: Upload KICS Results as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kics-results
          path: $GITHUB_WORKSPACE/kics_results  # Upload results folder as artifact
