name: Vorpal Code Scanning with reviewdog

on: # Defines when the workflow should be triggered
  push: # Trigger on push events to the specified branches
    branches:
      - master
  pull_request: # Trigger on pull requests targeting the specified branches
    branches:
      - master
  schedule: # Trigger on a schedule (optional)
    - cron: "0 3 * * *" # Runs daily at 3 AM UTC

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install project dependencies
        run: npm install

      - name: Vorpal GitHub Action With reviewdog
        uses: Checkmarx/vorpal-reviewdog-github-action@v1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_path: "server.js" # Adjust this if your code is in a subdirectory
          reporter: github-pr-review
          level: warning

      # Ensure results are generated and present in the directory
      - name: Check for results directory and move result files
        run: |
          echo "Listing contents of the workspace before any checks:"
          ls -al .

          if [ ! -d ./results ]; then
            echo "Results directory does not exist. Creating..."
            mkdir ./results
          fi
          
          if [ -f ./result.errorformat ]; then
            echo "Scan result file found."
            mv ./result.errorformat ./results/
          else
            echo "No result file found. Listing all files in workspace for debug:"
            ls -al .
            exit 1
          fi

      # Archive the results directory before uploading
      - name: Archive scan results
        run: |
          echo "Archiving the results directory."
          tar -czf ./results.tar.gz -C ./results .

      # Upload the archived results
      - name: Upload Scan Results
        uses: actions/upload-artifact@v3
        with:
          name: vorpal-scan-results
          path: ./results.tar.gz

      # Verify result file (errorformat) is uploaded instead of results.json
      - name: Verify results
        run: |
          if [ ! -f ./results/result.errorformat ]; then
            echo "Vorpal scan did not generate result.errorformat"
            exit 1
          else
            echo "Scan completed successfully"
          fi
